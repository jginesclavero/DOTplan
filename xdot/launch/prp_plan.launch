<?xml version="1.0"?>

<launch>
  <node pkg="tf" type="static_transform_publisher" name="tfmap_broadcaster" args="0 0 0 0 0 0 1 map world 100" />

 <!-- Start Gazebo with wg world running in (max) realtime -->
  <include file="$(find dotplan_interface_quadrotor)/worlds/launch/playpen.launch"/>
   
  <!-- Spawn simulated quadrotor uav -->
  <include file="$(find dotplan_interface_quadrotor)/quadnav/spawn_quadrotor_playpen.launch" >
    <arg name="model" value="$(find dotplan_interface_quadrotor)/quadnav/quadrotor/quadrotor_hokuyo_utm30lx.gazebo.xacro"/> 
  </include>
   
  <!-- Start SLAM system 
  <include file="$(find dotplan_interface_quadrotor)/quadnav/mapping_default.launch">
    <arg name="odom_frame" value="world"/>
  </include> -->

 
  <!-- Start GeoTIFF mapper
  <include file="$(find hector_geotiff)/launch/geotiff_mapper.launch">
    <arg name="trajectory_publish_rate" value="4"/> 
  </include> --> 
 
 
  <!-- MoveBase --> 
 <include file="$(find dotplan_interface_quadrotor)/quadnav/navigation/launch/amcl_demo_playpen.launch">
  </include>
 
  <!-- Start rviz visualization with preset config -->
  <node pkg="rviz" type="rviz" name="rviz" args="-d $(find dotplan_interface_quadrotor)/quadnav/indoor_slam.rviz" output="screen"/>

 <!-- quadrotor ROSPlan interface -->
  <node pkg="dotplan_interface_quadrotor" type="dotplan_interface_quadrotor" name="Interface_quadrotor" output="screen"/>


  <!-- planning system -->
  <node name="DOTActionServer" pkg="xdot" type="xdotActionServer" respawn="false" output="screen">
    <!-- directory for generated files -->
      <param name="problem_file" value="$(find xdot)/resources/PDDL/problem.pddl" />
      <param name="prefVizType" value=".pre" />
      <param name="domain_file" value="$(find xdot)/resources/PDDL/domain.pddl" />
      <param name="domainfo_file" value="$(find xdot)/resources/PDDL/domainfo.pddl"/>
      <param name="planner_path" value="$(find xdot)/planner/proprp/src"/>
      <param name="script_path" value="$(find xdot)/planner/proprp/prp-scripts"/>
      <param name="translator_file" value="$(find xdot)/planner/proprp/prp-scripts/translate_policy.py"/>
      <param name="validator_file" value="$(find xdot)/planner/proprp/prp-scripts/validator.py"/>
      <param name="policy_file" value="$(find xdot)/planner/proprp/prp-scripts/human_policy.pol"/>
      <param name="execution_files_path" value="$(find xdot)/resources/ExecutionINFO"/>
    <!-- to run the planner -->
      <param name="planner_command" value="(cd PLANNER ; ./prp DOMAIN PROBLEM --dump-policy 2 --final-fsap-free-round 1 --planlocal 0 --partial-planlocal 0 --limit-planlocal 0)" />
      <param name="translator_command" value="(cd PLANNER ; python TRANSLATOR > POLICY)" />
      <param name="preprograph_command" value="(cd PLANOUT ; SCRIPTS/preProcessGraph.py graph.dot graph.pre)" />
      <param name="validator_command" value="(cd PLANOUT ; python VALIDATOR DOMAINFO PROBLEM POLICY
prp)" />
      
  </node>

  <!-- scene database (MongoDB) -->
  <node name="DotViz" pkg="xdot" type="xdotViz.py" output="screen" />
  <node name="runPPDDLExecutor" pkg="xdot" type="runPPDDLExecutor.sh" output="screen" />

  <node name="dotplan_waypoint_server" pkg="dotplan_interface_quadrotor" type="dotplan_waypoint_server" respawn="false" output="screen"  launch-prefix="xterm -e">
      <param name="waypoint_file" value="$(find dotplan_interface_quadrotor)/common/waypoints.txt" />
   </node>
  <!-- scene database (MongoDB) -->
  <node name="spawn_model_client" pkg="dotplan_interface_quadrotor" type="spawn_model_client.py" output="screen" launch-prefix="xterm -e">
  </node>
  <node name="moveobject" pkg="dotplan_interface_quadrotor" type="moveobject" output="log">
  </node>
   
</launch>
